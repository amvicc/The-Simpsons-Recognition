{"version":3,"sources":["components/Main/index.js","App.js","index.js"],"names":["Main","props","state","imageURL","image","name","isLoading","handleUploadImage","bind","handleChange","event","preventDefault","data","FormData","append","this","setState","axios","method","url","then","response","replace","result","toLowerCase","split","map","word","charAt","toUpperCase","slice","join","catch","err","alert","undefined","target","URL","createObjectURL","files","Box","width","style","margin","CircularProgress","Grid","container","spacing","direction","justify","alignItems","item","xs","onChange","type","id","display","htmlFor","Button","marginTop","variant","color","component","onClick","TextField","value","InputProps","readOnly","textAlign","src","alt","React","Component","App","className","AppBar","position","Toolbar","justifyContent","Typography","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89b4aaa3.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios'\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      imageURL: '',\r\n      image: null,\r\n      name: ' ',\r\n      isLoading: false\r\n    };\r\n\r\n    this.handleUploadImage = this.handleUploadImage.bind(this);\r\n    this.handleChange = this.handleChange.bind(this)\r\n  }\r\n\r\n  handleUploadImage(event) {\r\n    event.preventDefault();\r\n\r\n    const data = new FormData();\r\n    data.append('file', this.state.image)\r\n    \r\n    this.setState({\r\n        ...this.state.image,\r\n        ...this.state.imageURL,\r\n        ...this.state.name,\r\n        isLoading: true\r\n    })\r\n\r\n    axios({\r\n        method: 'POST',\r\n        url: '/upload',\r\n        data: data\r\n    })\r\n    .then( (response) => {\r\n        let name = response.data\r\n        name = name.replace('_', ' ')\r\n        const toTitleCase = (phrase) => {\r\n            return phrase\r\n              .toLowerCase()\r\n              .split(' ')\r\n              .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n              .join(' ');\r\n        };\r\n        let result = \"This is \" + toTitleCase(name);\r\n        \r\n        this.setState({\r\n            ...this.state.image,\r\n            ...this.state.imageURL,\r\n            name: result,\r\n            isLoading: false\r\n        })\r\n    })\r\n    .catch((err) => {\r\n        this.setState({\r\n            ...this.state.image,\r\n            ...this.state.imageURL,\r\n            ...this.state.name,\r\n            isLoading: false\r\n        })\r\n        alert(\"Server error:\" + err)\r\n    })\r\n  }\r\n\r\n  handleChange(event) {\r\n      if(event.target !== undefined) {\r\n        this.setState({\r\n            imageURL: URL.createObjectURL(event.target.files[0]),\r\n            image: event.target.files[0],\r\n            ...this.state.name\r\n        })\r\n      }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Box width=\"100%\" style={{margin: 75}}>\r\n            {this.state.isLoading?(\r\n                <CircularProgress />\r\n            ):(\r\n                <Grid \r\n                    container \r\n                    spacing={3} \r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item xs={3}>\r\n                        <input \r\n                            onChange={this.handleChange} \r\n                            type=\"file\"\r\n                            id=\"contained-button-file\"\r\n                            style={{ display: \"none\" }}\r\n                        />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button style={{marginTop: '25px', width: '315px'}} variant=\"contained\" color=\"primary\" component=\"span\"> \r\n                                Загрузить фотографию Симпсона\r\n                            </Button>\r\n                        </label>\r\n                        <Button style={{marginTop: '25px', width: '315px'}} variant=\"contained\" color=\"primary\" onClick={this.handleUploadImage}>\r\n                            Узнать имя Симпсона\r\n                        </Button>\r\n                        {this.state.name === ' '?(\r\n                            <div></div>\r\n                        ):(\r\n                            <TextField\r\n                                id=\"standard-read-only-input\"\r\n                                value={this.state.name}\r\n                                InputProps={{\r\n                                    readOnly: true,\r\n                                }}\r\n                                variant=\"outlined\"\r\n                                style={{marginTop: '25px', width: '315px', textAlign: 'center'}}\r\n                            />\r\n                        )}\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        {this.state.imageURL === ''?(\r\n                            <div></div>\r\n                        ):(\r\n                            <img style={{width: '400px'}} src={this.state.imageURL} alt=\"img\"/>\r\n                        )}\r\n                    </Grid>\r\n                </Grid>\r\n            )}\r\n        </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Main from './components/Main'\nimport 'typeface-roboto';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\">\n        <Toolbar style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n          <Typography variant=\"h6\">\n            Распознование Симпсонов\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}